paths:
  /locations:
    get:
      summary: Retrieve all locations
      description: Fetch all locations where `deleted_at` is null, ordered by creation date in descending order.
      tags:
        - Locations
      parameters:
        - name: page
          in: query
          required: false
          description: The page number for pagination.
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: false
          description: The number of items per page.
          schema:
            type: integer
            example: 10
        - name: search
          in: query
          required: false
          description: Search for locations by name.
          schema:
            type: string
            example: "New York"
        - name: logs
          in: query
          required: false
          description: Include logs for each location.
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: A list of locations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Locations retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1234"
                        name:
                          type: string
                          example: "New York"
                        latitude:
                          type: number
                          example: 40.7128
                        longitude:
                          type: number
                          example: -74.0060
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-02-01T12:34:56.000Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2025-02-02T14:56:78.000Z"

  /locations/{id}:
    get:
      summary: Retrieve a location by ID
      description: Fetch a specific location by its ID, including sub-locations if available.
      tags:
        - Locations
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the location to retrieve.
          schema:
            type: string
            example: "1234"
      responses:
        200:
          description: The requested location data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Location retrieved successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1234"
                      name:
                        type: string
                        example: "New York"
                      latitude:
                        type: number
                        example: 40.7128
                      longitude:
                        type: number
                        example: -74.0060
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-02-01T12:34:56.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-02-02T14:56:78.000Z"
                      sub_locations:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "5678"
                            name:
                              type: string
                              example: "Brooklyn"
                            location_id:
                              type: string
                              example: "1234"
                            created_at:
                              type: string
                              format: date-time
                              example: "2025-02-01T12:34:56.000Z"
                            updated_at:
                              type: string
                              format: date-time
                              example: "2025-02-02T14:56:78.000Z"

  /locations/create:
    post:
      summary: Create a new location
      description: Add a new location with a name, latitude, and longitude.
      tags:
        - Locations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Los Angeles"
                latitude:
                  type: number
                  example: 34.0522
                longitude:
                  type: number
                  example: -118.2437
              required:
                - name
                - latitude
                - longitude
      responses:
        201:
          description: Location created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Location created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "5678"
                      name:
                        type: string
                        example: "Los Angeles"
                      latitude:
                        type: number
                        example: 34.0522
                      longitude:
                        type: number
                        example: -118.2437
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-02-01T12:34:56.000Z"
        400:
          description: Validation error or duplicate location name.
        500:
          description: Internal server error.

  /locations/{id}/edit:
    put:
      summary: Edit a location
      description: Update an existing location's information by providing its ID.
      tags:
        - Locations
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the location to edit.
          schema:
            type: string
            example: "1234"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "San Francisco"
                latitude:
                  type: number
                  example: 37.7749
                longitude:
                  type: number
                  example: -122.4194
              required:
                - name
                - latitude
                - longitude
      responses:
        200:
          description: Location updated successfully.
        404:
          description: Location not found.
        500:
          description: Internal server error.

  /locations/{id}/delete:
    delete:
      summary: Delete a location
      description: Soft delete a location by marking it as deleted.
      tags:
        - Locations
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the location to delete.
          schema:
            type: string
            example: "1234"
      responses:
        200:
          description: Location deleted successfully.
        404:
          description: Location not found.
        500:
          description: Internal server error.
